// Corresponds to:
//
// ```
// let a = Foo { ... };
// let b = &*a.field;
// a = Foo { .. };
// use(b);
// ```
//
// Should be OK; `b` will not be invalidated by
// overwriting `a`, and no new alias is created.

struct Foo<'-> {
  field: &'0 mut ()
}  

let a: Foo<'_>;
let b: &'_ ();

block START {
    a = use();
    b = &'_ a.field.star;
    a = use();
    use(b);
    StorageDead(b);
    StorageDead(a);
}

